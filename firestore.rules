rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isHairdresser() {
      return exists(/databases/$(database)/documents/hairdressers/$(request.auth.uid));
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // --- Collection Rules ---

    // Users (Admins) collection
    match /users/{userId} {
      allow read: if isAdmin() || isOwner(userId);
      allow write, create: if isAdmin();
    }

    // Hairdressers collection
    match /hairdressers/{hairdresserId} {
      allow read, write: if isAdmin() || isOwner(hairdresserId);
      allow create, delete: if isAdmin();
    }

    // Locations (Salons) collection
    match /locations/{locationId} {
      allow read: if isAdmin() || isHairdresser();
      allow write: if isAdmin();
    }
    
    // Services collection
    match /services/{serviceId} {
      allow read: if isAdmin() || isHairdresser();
      allow write: if isAdmin();
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      // Admins can get any single booking, or update any booking.
      // Hairdressers can get/update a booking only if it's assigned to them.
      allow get, update: if isAdmin() || (isHairdresser() && resource.data.hairdresserId == request.auth.uid);
      
      // Admins can list all bookings.
      // Hairdressers can also perform list queries, but their client-side code MUST contain a `where("hairdresserId", "==", request.auth.uid)` clause.
      allow list: if isAdmin() || isHairdresser();
      
      // Admins or Hairdressers can create bookings.
      allow create: if isAdmin() || isHairdresser();
      
      // Only Admins can delete bookings.
      allow delete: if isAdmin();
    }
    
    // Clients collection
    match /clients/{clientId} {
      // Admins and Hairdressers can manage client records.
      allow read, write, create: if isAdmin() || isHairdresser();
    }
    
    // Notifications collection (Admin only)
    match /notifications/{notificationId} {
       allow read, write: if isAdmin();
    }
  }
}
